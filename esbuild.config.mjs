import esbuild from 'esbuild';
import process from 'process';
import fs from 'fs';
import path from 'path';

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
If you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === 'production';
// Update this path to point to your actual Obsidian vault
const outDir = prod 
  ? 'dist' 
  : '/Users/llama/Documents/Personal/.obsidian/plugins/obsidian-granola';

// Make sure the output directory exists
if (!fs.existsSync(outDir)) {
  fs.mkdirSync(outDir, { recursive: true });
}

// Copy manifest.json and styles.css
fs.copyFileSync('manifest.json', path.join(outDir, 'manifest.json'));
try {
  fs.copyFileSync('styles.css', path.join(outDir, 'styles.css'));
} catch (err) {
  console.log('No styles.css found, skipping...');
}

esbuild.build({
  banner: {
    js: banner,
  },
  entryPoints: ['main.ts'],
  bundle: true,
  external: [
    'obsidian', 'electron', '@codemirror/state', '@codemirror/view',
    'child_process', 'fs', 'path'
  ],
  platform: 'node',
  format: 'cjs',
  target: 'es2020',
  logLevel: 'info',
  sourcemap: prod ? false : 'inline',
  treeShaking: true,
  outfile: `${outDir}/main.js`,
}).catch(() => process.exit(1));
